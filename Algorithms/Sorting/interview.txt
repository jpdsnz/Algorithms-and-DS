//------------ Interview Questions ------------//
/*
//#1 - Sort 10 schools around your house by distance:
    Insertion sort  (small data, very fast)

//#2 - eBay sorts listings by the current Bid amount:
    Radix or Counting (bid is usually a fixed range of integers or numbers)

//#3 - Sport scores on ESPN
    Quick sort (most effecient because there are so many types, QS has better space complexity)

//#4 - Massive database (can't fit all into memory) needs to sort through past year's user data
    Merge Sort (external Memory, and also do not want worst case of QS with such a large database)

//#5 - Almost sorted Udemy review data needs to update and add 2 new reviews
    Insertion sort (because almost sorted)

//#6 - Temperature Records for the past 50 years in Canada
    Maybe use Radix or Counting if the temps have no decimals! Quick Sort

//#7 - Large user name database needs to be sorted. Data is very random.
    Use Merge sort if we have enough memory, or Quick Sort if db is not very large and not worried about worst case

//#8 - You want to teach sorting for the first time
    Bubble Sort, Selection sort

*/
